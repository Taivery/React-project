
import React, { useState } from 'react';
import './App.css';
import logo from './image/logo.png';
import telefon from './image/telefon.jpg';
import kurtka from './image/kurtka.jpeg';
import vacuum from './image/dayson.png';
import barbie from './image/Barbi.jpg';
import book1984 from './image/dj.jpg';
import tv from './image/LG.jpg';
import coat from './image/palto.jpg';
import microwave from './image/Samsung.jpg';
import lego from './image/starwars.jpg';
import gone from './image/Vetrom.jpg';
import YandexMap from './YandexMap';

;


function AboutPage() {
  return (
    <div className="about-page">
      <h2>–û –Ω–∞—Å</h2>
      <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å ‚Äî <strong>EasyBuy!</strong></p>
      <p>–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–¥–µ–ª–∞—Ç—å –æ–Ω–ª–∞–π–Ω-—à–æ–ø–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–Ω—ã–º, –ø–æ–Ω—è—Ç–Ω—ã–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º.</p>
      <p><strong>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞:</strong> support@marketplace.com</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (999) 123-45-67</p>
      <p><strong>–ê–¥—Ä–µ—Å:</strong> –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥.1</p>
    </div>
  );
}

function FAQPage() {
  return (
    <div className="faq-page">
      <h2><strong>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</strong></h2>

      <h3><strong>–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?</strong></h3>
      <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑". –î–∞–ª–µ–µ —É–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ–ø–ª–∞—Ç—ã, –∑–∞—Ç–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑.</p>

      <h3><strong>–°–∫–æ–ª—å–∫–æ –∏–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?</strong></h3>
      <p>–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞. –û–±—ã—á–Ω–æ –∫—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 2 –¥–æ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –°–∞–º–æ–≤—ã–≤–æ–∑ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–æ—Ç –∂–µ –∏–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.</p>

      <h3><strong>–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?</strong></h3>
      <p>–ï—Å–ª–∏ –≤—ã –µ—â—ë –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∑–∞–∫–∞–∑ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—á–∏—Å—Ç–∏—Ç–µ –∫–æ—Ä–∑–∏–Ω—É. –ï—Å–ª–∏ –∑–∞–∫–∞–∑ —É–∂–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–û –Ω–∞—Å".</p>
    </div>
  );
}

function ProductPage({ product, onBack, onAddToCart }) {
  return (
    <div className="product-page">
      <div className="product-card">
        <img src={product.image} alt={product.name} className="product-card-image" />
        <div className="product-details">
          <h3>{product.name}</h3>
          <p>{product.description}</p>
          <p className="product-price"><strong>{product.price.toLocaleString()} ‚ÇΩ</strong></p>
          <div className="buttons">
            <button className="add-button" onClick={() => onAddToCart(product)}>–í –∫–æ—Ä–∑–∏–Ω—É</button>
            <button className="back-button" onClick={onBack}>–ù–∞–∑–∞–¥</button>
          </div>
        </div>
      </div>
    </div>
  );
}

function TrackingPage({ orders = [] }) {
  return (
    <div className="tracking-page">
      <h2>–í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã</h2>
      {orders.length > 0 ? (
        orders.map((item, idx) => (
          <div key={idx} className="tracking-card">
            <div className="tracking-image-placeholder">üì¶</div>
            <div className="tracking-info">
              <div className="tracking-name">{item.name}</div>
              <div className="tracking-status">–°—Ç–∞—Ç—É—Å: <span className="tracking-progress">–≤ –ø—É—Ç–∏</span></div>
            </div>
          </div>
        ))
      ) : (
        <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</p>
      )}
    </div>
  );
}

const categories = ['–í—Å–µ', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–û–¥–µ–∂–¥–∞', '–î–æ–º', '–ò–≥—Ä—É—à–∫–∏', '–ö–Ω–∏–≥–∏'];

const products = [
  { id: 1, name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S21', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', price: 59990, image: telefon, description: '–ú–æ—â–Ω—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å AMOLED-–¥–∏—Å–ø–ª–µ–µ–º.' },
  { id: 2, name: '–ö—É—Ä—Ç–∫–∞ –∑–∏–º–Ω—è—è –º—É–∂—Å–∫–∞—è', category: '–û–¥–µ–∂–¥–∞', price: 9990, image: kurtka, description: '–¢–µ–ø–ª–∞—è –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞.' },
  { id: 3, name: '–ü—ã–ª–µ—Å–æ—Å Dyson V11', category: '–î–æ–º', price: 34990, image: vacuum, description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ø—ã–ª–µ—Å–æ—Å Dyson.' },
  { id: 4, name: '–ö—É–∫–ª–∞ –ë–∞—Ä–±–∏', category: '–ò–≥—Ä—É—à–∫–∏', price: 1990, image: barbie, description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∫—É–∫–ª–∞ –ë–∞—Ä–±–∏.' },
  { id: 5, name: '–ö–Ω–∏–≥–∞ "1984"', category: '–ö–Ω–∏–≥–∏', price: 790, image: book1984, description: '–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è –î–∂. –û—Ä—É—ç–ª–ª–∞.' },
  { id: 6, name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä LG OLED', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', price: 109990, image: tv, description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π OLED-—Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG.' },
  { id: 7, name: '–ü–∞–ª—å—Ç–æ –∂–µ–Ω—Å–∫–æ–µ', category: '–û–¥–µ–∂–¥–∞', price: 12990, image: coat, description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –ø–∞–ª—å—Ç–æ –Ω–∞ –æ—Å–µ–Ω—å.' },
  { id: 8, name: '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞ Samsung', category: '–î–æ–º', price: 8990, image: microwave, description: '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∞—è –ø–µ—á—å Samsung.' },
  { id: 9, name: '–õ–µ–≥–æ Star Wars', category: '–ò–≥—Ä—É—à–∫–∏', price: 7490, image: lego, description: '–ù–∞–±–æ—Ä –õ–µ–≥–æ –ø–æ Star Wars.' },
  { id: 10, name: '–ö–Ω–∏–≥–∞ "–£–Ω–µ—Å–µ–Ω–Ω—ã–µ –≤–µ—Ç—Ä–æ–º"', category: '–ö–Ω–∏–≥–∏', price: 950, image: gone, description: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω.' }
];


const showProduct = (product) => {
    setSelectedProduct(product);
    setPage('product');
  };

function AuthPage({ onLogin, onSwitch }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  return (
    <div className="auth-page">
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
      <input placeholder="Email" value={email} onChange={e => setEmail(e.target.value)} />
      <input placeholder="–ü–∞—Ä–æ–ª—å" type="password" value={password} onChange={e => setPassword(e.target.value)} />
      <button onClick={() => onLogin(email)}>–í–æ–π—Ç–∏</button>
      <p>–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <button onClick={onSwitch}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button></p>
    </div>
  );
}

function RegisterPage({ onRegister, onSwitch }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirm, setConfirm] = useState('');

  const handleSubmit = () => {
    const allowedDomains = ['mail.ru', 'gmail.com', 'yandex.ru', 'bk.ru', 'outlook.com'];
    const validEmail = email.trim().match(/^[^@\s]+@([^@\s]+\.[^@\s]+)$/);
    const domain = validEmail?.[1];

    if (!email || !validEmail || !allowedDomains.includes(domain)) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä: user@mail.ru)');
      return;
    }

    if (!password || password.length < 6) {
      alert('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }

    if (password !== confirm) {
      alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }

    onRegister(email);
  };
  function AboutPage() {
  return (
    <div className="about-page">
      <h2>–û –Ω–∞—Å</h2>
      <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å ‚Äî <strong>EasyBuy!</strong></p>
      <p>–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–¥–µ–ª–∞—Ç—å –æ–Ω–ª–∞–π–Ω-—à–æ–ø–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–Ω—ã–º, –ø–æ–Ω—è—Ç–Ω—ã–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º.</p>
      <p><strong>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞:</strong> support@marketplace.com</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (999) 123-45-67</p>
      <p><strong>–ê–¥—Ä–µ—Å:</strong> –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥.1</p>
    </div>
  );
}


  return (
    <div className="auth-page">
      <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
      <input placeholder="Email" value={email} onChange={e => setEmail(e.target.value)} />
      <input placeholder="–ü–∞—Ä–æ–ª—å" type="password" value={password} onChange={e => setPassword(e.target.value)} />
      <input placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" type="password" value={confirm} onChange={e => setConfirm(e.target.value)} />
      <button onClick={handleSubmit}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
      <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <button onClick={onSwitch}>–í–æ–π—Ç–∏</button></p>
    </div>
  );
}


function AccountPage({ userEmail, onLogout, orders = [] }) {
  return (
    <div className="account-page">
      <div className="account-box">
        <h2>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
        <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {userEmail}</p>
        <button className="logout-button" onClick={onLogout}>–í—ã–π—Ç–∏</button>
      </div>

      <div className="orders-box">
        <h3>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã</h3>
        {orders.length > 0 ? (
          <ul className="order-list">
            {orders.map((item, index) => (
              <li key={index} className="order-item">
                <img src={item.image} alt={item.name} className="order-image" />
                <div className="order-details">
                  <strong>{item.name}</strong>
                  <div>{item.price.toLocaleString()} ‚ÇΩ</div>
                  <div className="order-status">–°—Ç–∞—Ç—É—Å: <span className="tracking-progress">–≤ –ø—É—Ç–∏</span></div>
                </div>
              </li>
            ))}
          </ul>
        ) : (
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
        )}
        <button className="cart-button" onClick={() => window.location.href = '/'}>–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
      </div>
    </div>
  );
}



function App() {
  const [cart, setCart] = useState([]);
  const [filter, setFilter] = useState('–í—Å–µ');
  const [page, setPage] = useState('main');
  const [email, setEmail] = useState('');
  const [delivery, setDelivery] = useState('courier');
  const [pickupAddress, setPickupAddress] = useState('');
  const [deliveryFrom, setDeliveryFrom] = useState('');
  const [deliveryTo, setDeliveryTo] = useState('');
  const [payment, setPayment] = useState('card');
  const [cardNumber, setCardNumber] = useState('');
  const [cardExpiry, setCardExpiry] = useState('');
  const [cardCvv, setCardCvv] = useState('');
  const [authPage, setAuthPage] = useState('auth'); 
  const [userEmail, setUserEmail] = useState('');
  const [regEmail, setRegEmail] = useState('');
  const [regPassword, setRegPassword] = useState('');
  const [regConfirm, setRegConfirm] = useState('');
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [orders, setOrders] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');




  const addToCart = (item) => setCart([...cart, item]);
  const removeFromCart = (i) => setCart(cart.filter((_, idx) => idx !== i));
  const total = cart.reduce((sum, item) => sum + item.price, 0);
  const filtered = products.filter(
  p =>
    (filter === '–í—Å–µ' || p.category === filter) &&
    p.name.toLowerCase().includes(searchQuery.toLowerCase())
);


  const submitOrder = () => {
  const allowedDomains = ['mail.ru', 'gmail.com', 'yandex.ru', 'bk.ru', 'outlook.com'];
  const validEmail = email.trim().match(/^[^@\s]+@([^@\s]+\.[^@\s]+)$/);
  const domain = validEmail?.[1];

  if (!email || !validEmail || !allowedDomains.includes(domain)) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email: –Ω–∞–ø—Ä–∏–º–µ—Ä, user@mail.ru');
    return;
  }

if (delivery === 'pickup') {
  setPickupAddress('–ü—É–Ω–∫—Ç —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ ‚Ññ12, –¢–¶ "–í–µ—Å–Ω–∞"');
}


  if (delivery === 'courier' && (!deliveryFrom.trim() || !deliveryTo.trim())) {
    alert('–£–∫–∞–∂–∏—Ç–µ –æ–±–∞ –∞–¥—Ä–µ—Å–∞: –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
    return;
  }

  if (payment === 'card') {
    if (!cardNumber || !cardExpiry || !cardCvv) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã');
      return;
    }

    const cleanCard = cardNumber.replace(/\s/g, '');
    if (cleanCard.length !== 16) {
      alert('–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 16 —Ü–∏—Ñ—Ä');
      return;
    }
  }

  alert(`–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!\nEmail: ${email}\n–î–æ—Å—Ç–∞–≤–∫–∞: ${delivery}\n–û–ø–ª–∞—Ç–∞: ${payment}`);
  setOrders(prev => [...prev, ...cart]); 
  setCart([]);
  setPage('tracking'); 
};

    

  const handleCardNumberChange = (e) => {
    const value = e.target.value.replace(/\D/g, '');
    const formatted = value.replace(/(\d{4})(?=\d)/g, '$1 ').trim();
    setCardNumber(formatted);
  };

  const handleCardExpiryChange = (e) => {
    let value = e.target.value.replace(/\D/g, '').slice(0, 4);
    if (value.length >= 3) {
      value = value.slice(0, 2) + '/' + value.slice(2);
    }
    setCardExpiry(value);
  };
  const handleRegister = () => {
  const allowedDomains = ['mail.ru', 'gmail.com', 'yandex.ru', 'bk.ru', 'outlook.com'];
  const validEmail = regEmail.trim().match(/^[^@\s]+@([^@\s]+\.[^@\s]+)$/);
  const domain = validEmail?.[1];

  if (!regEmail || !validEmail || !allowedDomains.includes(domain)) {
    alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä: user@mail.ru)');
    return;
  }

  if (!regPassword || regPassword.length < 6) {
    alert('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
    return;
  }

  if (regPassword !== regConfirm) {
    alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
    return;
  }

  alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!');
  setPage('auth');
};


  return (
    
    <div className="layout">
      <header className="header">
        <div className="logo" onClick={() => setPage('main')} style={{ cursor: 'pointer' }}>
  EasyBuy
</div>

        <div
        className="cart-info"
  onClick={() => setPage('cart')}
  style={{ cursor: 'pointer' }}
>
  –ö–æ—Ä–∑–∏–Ω–∞ {cart.length}
</div>
      </header>
      <div className="body">
        <aside className="sidebar">
  <h3>–ö–∞—Ç–∞–ª–æ–≥</h3>
  <ul>
    {categories.map(cat => (
      <li key={cat}>
        <button
          className={filter === cat ? 'active' : ''}
          onClick={() => {
            setFilter(cat);
            setPage('main');  
          }}
        >
          {cat}
        </button>
      </li>
    ))}
    
  </ul>

  <h3>–í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã</h3>
  <ul>
    <li>
      <button className={page === 'about' ? 'active' : ''} onClick={() => setPage('about')}>–û –Ω–∞—Å</button>
    </li>
    <li>
      <button className={page === 'faq' ? 'active' : ''} onClick={() => setPage('faq')}>FAQ</button>

    </li>
    <li>
  <button className={page === 'tracking' ? 'active' : ''} onClick={() => setPage('tracking')}>–í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã</button>
</li>

  </ul>
</aside>
        <main className="container">
          {page === 'about' && (
  <AboutPage />
)}
  {page === 'faq' && <FAQPage />}
  {page === 'product' && selectedProduct && (
  <ProductPage
    product={selectedProduct}
    onBack={() => setPage('main')}
    onAddToCart={(product) => {
      addToCart(product);
      alert('–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É');
    }}
  />
)}
{page === 'tracking' && <TrackingPage orders={orders} />}

          {page === 'auth' && (
  authPage === 'auth'
  
    ? <AuthPage onLogin={(email) => { setUserEmail(email); setAuthPage('account'); }} onSwitch={() => setAuthPage('register')} />
    : authPage === 'register'
    ? <RegisterPage onRegister={(email) => { setUserEmail(email); setAuthPage('account'); }} onSwitch={() => setAuthPage('auth')} />
    : <AccountPage
  userEmail={userEmail}
  onLogout={() => {
    setUserEmail('');
    setAuthPage('auth');
    setPage('main');
  }}
  orders={orders}
/>


)}




      
      {page === 'cart' && (
        <div className="cart-page">
          <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
          {cart.length === 0 ? (
            <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
          ) : (
            <>
              <ul>
                {cart.map((item, i) => (
                  <li key={i}>
                    {item.name} ‚Äî {item.price.toLocaleString()} ‚ÇΩ
                    <button onClick={() => removeFromCart(i)}>‚úñ</button>
                  </li>
                ))}
              </ul>
              <div className="total">
                <strong>–ò—Ç–æ–≥–æ: {total.toLocaleString()} ‚ÇΩ</strong>
                <div className="modal-buttons">
                  <button onClick={() => setPage('checkout')}>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
                  <button onClick={() => setPage('main')}>–ù–∞–∑–∞–¥</button>
                
            <button onClick={() => setPage('main')}>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</button></div>
              </div>
            </>
          )}
        </div>
      )}

{page === 'main' && (
        <>
          <header className="header">
            <div className="logo">
  <img src={logo} alt="–õ–æ–≥–æ—Ç–∏–ø" className="logo-image" />
  <span className="logo-text">EasyBuy</span>
</div>
<input
  type="text"
  placeholder="–ü–æ–∏—Å–∫..."
  value={searchQuery}
  onChange={(e) => setSearchQuery(e.target.value)}
  style={{ padding: '0.3rem', borderRadius: '4px', border: '1px solid #ccc' ,}}
/>

           
<div className="auth-button">
              <div className="auth-controls">
              <button onClick={() => setPage('auth')}>üë§ –í—Ö–æ–¥</button>
              <button onClick={() => setPage('auth')}>üíº –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</button>
            </div>
</div>
{page === 'cart' && (
  <div className="cart-page">
    <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
    {cart.length === 0 ? (
      <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
    ) : (
      <>
        <ul>
          {cart.map((item, i) => (
            <li key={i}>
              {item.name} ‚Äî {item.price.toLocaleString()} ‚ÇΩ
              <button onClick={() => removeFromCart(i)}>‚úñ</button>
            </li>
          ))}
        </ul>
        <div className="total">
          <strong>–ò—Ç–æ–≥–æ: {total.toLocaleString()} ‚ÇΩ</strong>
          <div className="modal-buttons">
            <button onClick={() => setPage('checkout')}>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
            <button onClick={() => setPage('main')}>–ù–∞–∑–∞–¥</button>
          </div>
        </div>
      </>
    )}
  </div>
)}


          </header>


<div className="products">
  {filtered.map(item => (
    <div key={item.id} className="card" onClick={() => { setSelectedProduct(item); setPage('product'); }} style={{ cursor: 'pointer' }}>
      <img src={item.image} alt={item.name} className="product-image" />
      <div className="name">{item.name}</div>
      <div className="price">{item.price.toLocaleString()} ‚ÇΩ</div>
    </div>
  ))}
</div>


        </>
      )}

      {page === 'checkout' && (
        <div className="checkout-page">
          <h2>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>

          <label>Email:</label>
          <input value={email} onChange={e => setEmail(e.target.value)} type="email" placeholder="example@mail.com" />

          <label>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
          <select value={delivery} onChange={e => setDelivery(e.target.value)}>
            <option value="courier">–ö—É—Ä—å–µ—Ä</option>
            <option value="pickup">–°–∞–º–æ–≤—ã–≤–æ–∑</option>
          </select>
          {page === 'register' && (
  <div className="auth-page">
    <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
    <input
      type="email"
      placeholder="Email"
      value={regEmail}
      onChange={(e) => setRegEmail(e.target.value)}
    />
    <input
      type="password"
      placeholder="–ü–∞—Ä–æ–ª—å"
      value={regPassword}
      onChange={(e) => setRegPassword(e.target.value)}
    />
    <input
      type="password"
      placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
      value={regConfirm}
      onChange={(e) => setRegConfirm(e.target.value)}
    />
    <button onClick={handleRegister}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
    <p>
      –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
      <button onClick={() => setPage('auth')}>–í–æ–π—Ç–∏</button>
    </p>
  </div>
)}




          {delivery === 'courier' && (
            <>
              <label>–ü—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ (—Å–∫–ª–∞–¥/–º–∞–≥–∞–∑–∏–Ω):</label>
              <input
                value={deliveryFrom}
                onChange={e => setDeliveryFrom(e.target.value)}
                placeholder="–≥. –ë–∞—Ä–Ω–∞—É–ª, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 5"
              />
              <label>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
              <input
                value={deliveryTo}
                onChange={e => setDeliveryTo(e.target.value)}
                placeholder="–≥. –ë–∞—Ä–Ω–∞—É–ª, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10, –∫–≤. 42"
              />
              <div className="map-container">
                <YandexMap />
              </div>
            </>
          )}

          <label>–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:</label>
          <select value={payment} onChange={e => setPayment(e.target.value)}>
            <option value="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
            <option value="cash">–ù–∞–ª–∏—á–Ω—ã–µ</option>
          </select>

          {payment === 'card' && (
            <>
              <label>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</label>
              <input
                value={cardNumber}
                onChange={handleCardNumberChange}
                placeholder="0000 0000 0000 0000"
                maxLength={19}
              />
              <label>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</label>
              <input
                value={cardExpiry}
                onChange={handleCardExpiryChange}
                placeholder="MM/YY"
                maxLength={5}
              />
              <label>CVV:</label>
              <input
                value={cardCvv}
                onChange={e => setCardCvv(e.target.value)}
                placeholder="123"
                maxLength={3}
              />
            </>
          )}

          <div className="modal-buttons">
            <button onClick={submitOrder}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
            <button onClick={() => setPage('main')}>–ù–∞–∑–∞–¥</button>
          </div>
        </div>
      )}
    
        </main>
      </div>
      <footer className="footer">
        ¬© 2025 –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
      </footer>
    </div>
  );

}

export default App;
